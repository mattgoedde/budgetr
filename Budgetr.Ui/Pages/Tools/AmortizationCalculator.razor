@page "/tools/amortization-calculator"

<PageTitle>Budgetr - Amortization Calculator</PageTitle>

<h3>Amortization Calculator</h3>
<FluentDivider Style="margin-bottom: 10px;"></FluentDivider>

<FlexGrid>
    <FlexRow JustifyContent="Flex.JustifyContent.SpaceAround">
        <FlexGrid>
            <FlexRow>
                <Div Margin="Spacing.Margin.Medium" Style="max-width: 300px;">
                    <FluentCard Style="padding: 1rem; height: revert;">
                        <FlexGrid>
                            <FlexRow JustifyContent="Flex.JustifyContent.SpaceBetween">
                                <h4>Loan 1 - Inputs</h4>
                                <FluentButton @onclick=@InputCardResetButton1>Reset</FluentButton>
                            </FlexRow>
                        </FlexGrid>

                        <FluentDivider Style="margin-bottom: 10px;"></FluentDivider>
                        
                        <Div Class="flex-stack">
                            <FluentNumberField Step="1" @bind-Value=@loan1.LoanTermMonths>Loan Term (months)</FluentNumberField>
                            <small><em>@loanTermYearsDisplay1 years</em></small>
                        </Div>

                        <FluentNumberField Step="0.01" @bind-Value=@loan1.LoanAmount>Loan Amount<span slot="start">$</span></FluentNumberField>
                        <FluentNumberField Step="0.01" @bind-Value=@loan1.RemainingBalance>Remaining Balance<span slot="start">$</span></FluentNumberField>
                        <FluentNumberField Step="0.001" ValueExpression=@(() => loan1.AnnualInterestRate ) Value=@( loan1.AnnualInterestRate * 100 ) ValueChanged=@((double v) => { loan1.AnnualInterestRate = v / 100; })>Annual Interest Rate<span slot="start">%</span></FluentNumberField>

                    </FluentCard>
                </Div>
                <Div Margin="Spacing.Margin.Medium" Style="max-width: 300px;">
                    <FluentCard Style="padding: 1rem; height: revert;">
                        <h4>Loan 1 - Statistics</h4>
                        <FluentDivider Style="margin-bottom: 10px;"></FluentDivider>
                        <FlexGrid>
                            <FlexRow>
                                <Div Margin="Spacing.Margin.Small">
                                    <FluentNumberReadout>
                                        <LabelContent>
                                            Total Loan Amount
                                        </LabelContent>
                                        <ValueContent>
                                            @totalLoanAmountDisplay1
                                        </ValueContent>
                                    </FluentNumberReadout>
                                </Div>
                                <Div Margin="Spacing.Margin.Small">
                                    <FluentNumberReadout>
                                        <LabelContent>
                                            Remaining Amount
                                        </LabelContent>
                                        <ValueContent>
                                            @remainingLoanAmountDisplay1
                                        </ValueContent>
                                    </FluentNumberReadout>
                                </Div>
                            </FlexRow>
                            <FlexRow>
                                <Div Margin="Spacing.Margin.Small">
                                    <FluentNumberReadout>
                                        <LabelContent>
                                            Remaining Payments
                                        </LabelContent>
                                        <ValueContent>
                                            @remainingPaymentsDisplay1
                                        </ValueContent>
                                    </FluentNumberReadout>
                                </Div>
                                <Div Margin="Spacing.Margin.Small">
                                    <FluentNumberReadout>
                                        <LabelContent>
                                            Monthly Payment
                                        </LabelContent>
                                        <ValueContent>
                                            @monthlyPaymentDisplay1
                                        </ValueContent>
                                    </FluentNumberReadout>
                                </Div>
                            </FlexRow>
                            <FlexRow>
                                <Div Margin="Spacing.Margin.Small">
                                    <FluentNumberReadout>
                                        <LabelContent>
                                            Total Interest
                                        </LabelContent>
                                        <ValueContent>
                                            @totalInterestDisplay1
                                        </ValueContent>
                                    </FluentNumberReadout>
                                </Div>
                            </FlexRow>
                        </FlexGrid>
                    </FluentCard>
                </Div>
            </FlexRow>
        </FlexGrid>
        <FlexGrid>
            <FlexRow>
                <Div Margin="Spacing.Margin.Medium" Style="max-width: 300px;">
                    <FluentCard Style="padding: 1rem; height: revert;">
                        <FlexGrid>
                            <FlexRow JustifyContent="Flex.JustifyContent.SpaceBetween">
                                <h4>Loan 2 - Inputs</h4>
                                <FluentButton @onclick=@InputCardResetButton2>Reset</FluentButton>
                            </FlexRow>
                        </FlexGrid>
                        <FluentDivider Style="margin-bottom: 10px;"></FluentDivider>
                        <Div Class="flex-stack">
                            <FluentNumberField Step="1" @bind-Value=@loan2.LoanTermMonths>Loan Term (months)</FluentNumberField>
                            <small><em>@loanTermYearsDisplay2 years</em></small>
                        </Div>
                        <FluentNumberField Step="0.01" @bind-Value=@loan2.LoanAmount>Loan Amount<span slot="start">$</span></FluentNumberField>
                        <FluentNumberField Step="0.01" @bind-Value=@loan2.RemainingBalance>Remaining Balance<span slot="start">$</span></FluentNumberField>
                        <FluentNumberField Step="0.001" ValueExpression=@(() => loan2.AnnualInterestRate ) Value=@( loan2.AnnualInterestRate * 100 ) ValueChanged=@((double v) => { loan2.AnnualInterestRate = v / 100; })>Annual Interest Rate<span slot="start">%</span></FluentNumberField>

                    </FluentCard>
                </Div>
                <Div Margin="Spacing.Margin.Medium" Style="max-width: 300px;">
                    <FluentCard Style="padding: 1rem; height: revert;">
                        <h4>Loan 2 - Statistics</h4>
                        <FluentDivider Style="margin-bottom: 10px;"></FluentDivider>
                        <FlexGrid>
                            <FlexRow>
                                <Div Margin="Spacing.Margin.Small">
                                    <FluentNumberReadout>
                                        <LabelContent>
                                            Total Loan Amount
                                        </LabelContent>
                                        <ValueContent>
                                            @totalLoanAmountDisplay2
                                        </ValueContent>
                                    </FluentNumberReadout>
                                </Div>
                                <Div Margin="Spacing.Margin.Small">
                                    <FluentNumberReadout>
                                        <LabelContent>
                                            Remaining Amount
                                        </LabelContent>
                                        <ValueContent>
                                            @remainingLoanAmountDisplay2
                                        </ValueContent>
                                    </FluentNumberReadout>
                                </Div>
                            </FlexRow>
                            <FlexRow>
                                <Div Margin="Spacing.Margin.Small">
                                    <FluentNumberReadout>
                                        <LabelContent>
                                            Remaining Payments
                                        </LabelContent>
                                        <ValueContent>
                                            @remainingPaymentsDisplay2
                                        </ValueContent>
                                    </FluentNumberReadout>
                                </Div>
                            </FlexRow>
                            <FlexRow>
                                <Div Margin="Spacing.Margin.Small">
                                    <FluentNumberReadout>
                                        <LabelContent>
                                            Monthly Payment
                                        </LabelContent>
                                        <ValueContent>
                                            @monthlyPaymentDisplay2
                                        </ValueContent>
                                    </FluentNumberReadout>
                                </Div>
                                <Div Margin="Spacing.Margin.Small">
                                    <FluentNumberReadout>
                                        <LabelContent>
                                            Total Interest
                                        </LabelContent>
                                        <ValueContent>
                                            @totalInterestDisplay2
                                        </ValueContent>
                                    </FluentNumberReadout>
                                </Div>
                            </FlexRow>
                        </FlexGrid>
                    </FluentCard>
                </Div>
            </FlexRow>
        </FlexGrid>
    </FlexRow>
    <FlexRow Margin="Spacing.Margin.ExtraLarge">
        <FluentToolbar>
            <FlexGrid>
                <FlexRow>
                    <FluentSwitch @bind-Value=@loanSwitch>
                        Loan
                        <span slot="checked-message">Right</span>
                        <span slot="unchecked-message">Left</span>
                    </FluentSwitch>
                    <FluentSwitch @bind-Value=@displayAllPayments>
                        Payments
                        <span slot="checked-message">All</span>
                        <span slot="unchecked-message">Remaining</span>
                    </FluentSwitch>
                </FlexRow>
            </FlexGrid>
        </FluentToolbar>
        <Div Style="height: 400px; overflow-y: scroll;">
            <FluentDataGrid RowsData="@payments.AsQueryable()" Virtualize RowsDataSize="31">
                    <PropertyColumn Property="@(p => p.Period)" Format="d" Sortable="true" />
                    <PropertyColumn Property="@(p => p.Principal)" Format="C" Sortable="true" />
                    <PropertyColumn Property="@(p => p.Interest)" Format="C" Sortable="true" />
                    <PropertyColumn Property="@(p => p.Total)" Format="C" />
                </FluentDataGrid>
        </Div>
    </FlexRow>
</FlexGrid>

@code {
    bool displayAllPayments = false;
    bool loanSwitch = false;
    IEnumerable<LoanPayment> payments => loanSwitch ? payments2 : payments1;

    AmortizedLoanModel loan1 = new();
    IEnumerable<LoanPayment> allPayments1 => loan1.AllPayments();
    IEnumerable<LoanPayment> remainingPayments1 => loan1.RemainingPayments();
    IEnumerable<LoanPayment> payments1 => displayAllPayments ? allPayments1 : remainingPayments1;

    string loanTermYearsDisplay1 => ((double)loan1.LoanTermMonths / (double)12).ToString("F2");
    string totalLoanAmountDisplay1 => allPayments1.Sum(p => p.Interest + p.Principal).ToString("C");
    string remainingLoanAmountDisplay1 => remainingPayments1.Sum(p => p.Interest + p.Principal).ToString("C");
    string remainingPaymentsDisplay1 => remainingPayments1.Count().ToString("N0");
    string completedPaymentsDisplay1 => (loan1.LoanTermMonths - remainingPayments1.Count()).ToString("N0");
    string monthlyPaymentDisplay1 => loan1.NextPayment().Total.ToString("C");
    string totalInterestDisplay1 => allPayments1.Sum(p => p.Interest).ToString("C");

    AmortizedLoanModel loan2 = new();
    IEnumerable<LoanPayment> allPayments2 => loan2.AllPayments();
    IEnumerable<LoanPayment> remainingPayments2 => loan2.RemainingPayments();
    IEnumerable<LoanPayment> payments2 => displayAllPayments ? allPayments2 : remainingPayments2;

    string loanTermYearsDisplay2 => ((double)loan2.LoanTermMonths / (double)12).ToString("F2");
    string totalLoanAmountDisplay2 => allPayments2.Sum(p => p.Interest + p.Principal).ToString("C");
    string remainingLoanAmountDisplay2 => remainingPayments2.Sum(p => p.Interest + p.Principal).ToString("C");
    string remainingPaymentsDisplay2 => remainingPayments2.Count().ToString("N0");
    string completedPaymentsDisplay2 => (loan1.LoanTermMonths - remainingPayments2.Count()).ToString("N0");
    string monthlyPaymentDisplay2 => loan2.NextPayment().Total.ToString("C");
    string totalInterestDisplay2 => allPayments2.Sum(p => p.Interest).ToString("C");

    void InputCardResetButton1()
    {
        loan1 = new();
    }

    void InputCardResetButton2()
    {
        loan1 = new();
    }
}
