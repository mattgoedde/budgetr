@inherits Div

@code {
    protected override string ClassBuilder()
    {
        var baseClass = base.ClassBuilder();
        var sb = new StringBuilder(baseClass);

        sb.Append(" flex-grid-row");

        if (JustifyContent is not null) sb.Append($" {_justifyContent}");
        if (AlignContent is not null) sb.Append($" {_alignContent}");
        if (AlignItems is not null) sb.Append($" {_alignItems}");
        
        var @class = sb.ToString();
        
        return @class;
    }
    
    [Parameter]
    public Flex.JustifyContent? JustifyContent { get; set; }
    public string? _justifyContent => JustifyContent switch
    {
        Flex.JustifyContent.Center => "justify-center",
        Flex.JustifyContent.FlexStart => "justify-flex-start",
        Flex.JustifyContent.FlexEnd => "justify-flex-end",
        Flex.JustifyContent.SpaceAround => "justify-space-around",
        Flex.JustifyContent.SpaceBetween => "justify-space-between",
        _ => null,
    };

    [Parameter]
    public Flex.AlignContent? AlignContent { get; set; }
    public string? _alignContent => AlignContent switch
    {
        Flex.AlignContent.Center => "align-content-center",
        Flex.AlignContent.FlexStart => "align-content-flex-start",
        Flex.AlignContent.FlexEnd => "align-content-flex-end",
        Flex.AlignContent.SpaceAround => "align-content-space-around",
        Flex.AlignContent.SpaceBetween => "align-content-space-between",
        _ => null,
    };

    [Parameter]
    public Flex.AlignItems? AlignItems { get; set; }
    public string? _alignItems => AlignItems switch
    {
        Flex.AlignItems.Center => "align-items-center",
        Flex.AlignItems.FlexStart => "align-items-flex-start",
        Flex.AlignItems.FlexEnd => "align-items-flex-end",
        Flex.AlignItems.Stretch => "align-items-stretch",
        Flex.AlignItems.Baseline => "align-items-baseline",
        _ => null,
    };
}